<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.second.dao.TeacherDao">
    <resultMap id="BaseResultMap" type="com.example.second.entity.Teacher">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="subject" property="subject" jdbcType="VARCHAR"/>
        <result column="salary" property="salary" jdbcType="INTEGER"/>
        <result column="native_place" property="native_place" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        uid, name, age, sex,subject,salary,native_place
    </sql>

    <select id="findAllTeachers" resultType="com.example.second.entity.Teacher">
        select * from teacher
    </select>

    <select id="findTeacherByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from teacher where name = #{name,jdbcType=VARCHAR}
    </select>

    <delete id="deleteTeachersByIds">
        delete from teacher where uid in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCountTeachers" resultType="java.lang.Integer">
        select count(uid) as count from teacher
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from teacher
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteTeacherById" parameterType="java.lang.Long">
        delete from teacher
        where uid = #{uid,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.second.entity.Teacher">
        insert into teacher (uid, name, age,
        sex,subject,salary,native_place)
        values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
        #{sex,jdbcType=VARCHAR},#{subject,jdbcType=VARCHAR},#{salary,jdbcType=INTEGER},#{native_place,jdbcType=VARCHAR})
    </insert>
    <insert id="addTeacher" parameterType="com.example.second.entity.Teacher">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="subject != null">
                subject,
            </if>
            <if test="salary != null">
                salary,
            </if>
            <if test="native_place != null">
                native_place,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="subject != null">
                #{subject,jdbcType=VARCHAR},
            </if>
            <if test="salary != null">
                #{salary,jdbcType=INTEGER},
            </if>
            <if test="native_place != null">
                #{native_place,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateTeacher" parameterType="com.example.second.entity.Teacher">
        update teacher
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="subject != null">
                subject = #{subject,jdbcType=VARCHAR},
            </if>
            <if test="salary != null">
                salary = #{salary,jdbcType=INTEGER},
            </if>
            <if test="native_place != null">
                native_place = #{native_place,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.second.entity.Teacher">
        update teacher
        set name = #{name,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        sex = #{sex,jdbcType=VARCHAR},
        subject = #{subject,jdbcType=VARCHAR},
        salary = #{salary,jdbcType=INTEGER},
        native_place = #{native_place,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=BIGINT}
    </update>
</mapper>